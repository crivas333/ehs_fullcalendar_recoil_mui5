1) dala@DALA test_usestate]$ git init
Reinitialized existing Git repository in /home/dala/0_MY_FILES/myWebApp/shortApps/test_usestate/.git/

2)

*) LOCAL MERGE and PUSH to REMOTE MAIN
> git checkout main
- git merge "new-branch" (in the local environment)
>git merge main
-push local:main into remote:main
>git push -u origin main

*) Rebasing works by transferring each local commit to the updated master branch one at a time. 
>git checkout branch
>git rebase master
>git checkout master
>git merge branch
// git command to merge the branch(feature branch - add-header)
Ex: git merge add-header

*)Sincronizar remote:main with local:main
>git checkout main
>git pull

*)see remote head
>git remote -v
origin  https://github.com/crivas333/my-app-new.git (fetch)
origin  https://github.com/crivas333/my-app-new.git (push)
The default name (also known as an alias) for that remote repo is origin

*Initialize Git
>git init

*)Associate a git repor to a Gitgub repo:
>git remote add origin <URL>
>git remote add origin https://github.com/crivas333/ehs-reactquery.git

*)change remote repo at github
>git remote set-url origin <url>
>git remote set-url origin https://github.com/crivas333/ehs-reactquery.git
>git push -u origin main

…or create a new repository on the command line
echo "# ehs-reactquery" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/crivas333/ehs-reactquery.git
git push -u origin main

…or push an existing repository from the command line
git remote add origin https://github.com/crivas333/ehs-reactquery.git
git branch -M main
git push -u origin main